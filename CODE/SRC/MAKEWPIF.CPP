// Van's cheesy Win95 PIF maker

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>

char pPifBuffer[] =
{
0x00, 0x78, 0x42, 0x6c, 0x6f, 0x6f, 0x64, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x4d, 0x61, 0x67, 0x69,
0x63, 0x20, 0x44, 0x65, 0x6d, 0x6f, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
0x80, 0x02, 0x00, 0x00, 0x43, 0x3a, 0x5c, 0x49, 0x4e, 0x54, 0x52, 0x50, 0x4c, 0x41, 0x59, 0x5c,
0x42, 0x41, 0x4d, 0x44, 0x45, 0x4d, 0x4f, 0x5c, 0x42, 0x41, 0x4d, 0x2e, 0x45, 0x58, 0x45, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x3a, 0x5c, 0x49, 0x4e, 0x54, 0x52, 0x50, 0x4c, 0x41, 0x59,
0x5c, 0x42, 0x41, 0x4d, 0x44, 0x45, 0x4d, 0x4f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0xff, 0x19, 0x50, 0x00, 0x00, 0x07, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x4d, 0x49, 0x43, 0x52, 0x4f, 0x53, 0x4f, 0x46, 0x54, 0x20, 0x50, 0x49, 0x46, 0x45, 0x58,
0x00, 0x87, 0x01, 0x00, 0x00, 0x71, 0x01, 0x57, 0x49, 0x4e, 0x44, 0x4f, 0x57, 0x53, 0x20, 0x33,
0x38, 0x36, 0x20, 0x33, 0x2e, 0x30, 0x00, 0x05, 0x02, 0x9d, 0x01, 0x68, 0x00, 0x80, 0x02, 0x00,
0x00, 0x64, 0x00, 0x32, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x0a, 0x10, 0x22,
0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x57, 0x49, 0x4e, 0x44, 0x4f, 0x57, 0x53, 0x20, 0x56, 0x4d, 0x4d,
0x20, 0x34, 0x2e, 0x30, 0x00, 0xff, 0xff, 0x1b, 0x02, 0xac, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x43, 0x3a, 0x5c, 0x49, 0x4e, 0x54, 0x52, 0x50, 0x4c, 0x41, 0x59, 0x5c, 0x42,
0x41, 0x4d, 0x44, 0x45, 0x4d, 0x4f, 0x5c, 0x41, 0x75, 0x74, 0x6f, 0x72, 0x75, 0x6e, 0x2e, 0x65,
0x78, 0x65, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x32, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
0x00, 0x00, 0x00, 0x05, 0x00, 0x19, 0x00, 0x03, 0x00, 0xc8, 0x00, 0xe8, 0x03, 0x02, 0x00, 0x0a,
0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x20, 0x4e, 0x65, 0x77,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00
};

#define PIF_TITLE	0x02
#define PIF_CMD	0x24
#define PIF_DIR	0x65
#define PIF_ICON	0x273

//char *ScanFileForString(char *pFileName, char *pTargetString, char *pBeginString = NULL);
//int ScanFileForAllStrings(char *pFileName, char *pTargetString, char *pBeginString, char *pList);
//void AddAutoExecLine(char *pNewLine), AddConfigSysLine(char *pNewLine);

void
main(int argc, char *argv[])
{
	char	pName[160], *pStr1, *pStr2, pDeviceName[40], deviceLetter, pDriverLine[120],
		pStrList[20][120];
	int	int1, loop1;

	// argv[1] == app title
	// argv[2] == cmdline
	// argv[3] == working dir
	// argv[4] == icon path

	FILE *pFile;

	//	printf("Argc=%d\n", argc);
	printf("Windows95 PIF generator.  Copyright (C) 1996 by Tachyon Studios Inc.\n");

	if(argc < 5)
	{
		printf("Incorrect cmd-line args\n");
		return;
	}

	printf("Generating icon \"%s.PIF\"\n", argv[1]);

	printf("Application name = \"%s\"\n", argv[1]);
	printf("Cmd line         = \"%s\"\n", argv[2]);
	printf("Working dir      = \"%s\"\n", argv[3]);
	printf("Icon path        = \"%s\"\n", argv[4]);

	// app title
	strcpy(pPifBuffer + PIF_TITLE, argv[1]);

	// cmd line
	strcpy(pPifBuffer + PIF_CMD, argv[2]);

	// working dir
	strcpy(pPifBuffer + PIF_DIR, argv[3]);

	// PIF's icon source
	strcpy(pPifBuffer + PIF_ICON, argv[4]);

	printf("\nGenerating Win95 icon.. ");

	strcpy(pName, "C:\\WINDOWS\\DESKTOP\\XYZZYV.PIF");
	pFile = fopen(pName, "wb");
	if(!pFile)
	{
		printf("fopen(%s, \"wb\") failed!\n", pName);
		return;	// Win95 not installed, or not where we expected it
	}
	fwrite(pPifBuffer, sizeof(pPifBuffer), 1, pFile);
	fclose(pFile);

	printf("\nMoving icon to C:\\WINDOWS\\DESKTOP.. ");
	sprintf(pName, "C: | cd \\WINDOWS\\DESKTOP | del \"%s.pif\" | rename XYZZYV.PIF \"%s.pif\"",
		argv[1], argv[1]);
	system(pName);
	printf(" done\n");

}
/*
int
ScanFileForAllStrings(char *pFileName, char *pTargetString, char *pBeginString, char *pList)
{
	FILE				*pFile;
	static char		pBuffer[160];
	int				count = 0;

	strupr(pTargetString);

	pFile = fopen(pFileName, "r");
	if(!pFile)
		return(0);
 
	fgets(pBuffer, 150, pFile);
	while(!feof(pFile))
	{
		strupr(pBuffer);
		pBuffer[strlen(pBuffer) - 1] = NULL;	// chop EOL
		
		if(strstr(pBuffer, "HIMEM.SYS") || strstr(pBuffer, "EMM386") ||
			strstr(pBuffer, "MOUSE") || strstr(pBuffer, "ANSI") ||
			strstr(pBuffer, "IFSHLP"))
		{
			// skip these - they'll already be included
			fgets(pBuffer, 150, pFile);
			continue;
		}
			
		if(pBeginString)
		{
			if(strnicmp(pBuffer, pBeginString, strlen(pBeginString)))
			{
				fgets(pBuffer, 150, pFile);
				continue;
			}
		}

		if(strstr(pBuffer, pTargetString))
		{
			strcpy(pList, pBuffer);
			pList += 120;
			count++;
		}		
		fgets(pBuffer, 150, pFile);
	}
	fclose(pFile);
	return(count);
}

char *
ScanFileForString(char *pFileName, char *pTargetString, char *pBeginString)
{
	FILE				*pFile;
	char				*pStrFound;
	static char		pBuffer[160];

	strupr(pTargetString);

	pFile = fopen(pFileName, "r");
	if(!pFile)
		return(NULL);
	
	pStrFound = NULL;
	fgets(pBuffer, 150, pFile);
	while(!feof(pFile) && !pStrFound)
	{
		strupr(pBuffer);
		pBuffer[strlen(pBuffer) - 1] = NULL;	// chop EOL
		
		if(pBeginString)
		{
			if(strnicmp(pBuffer, pBeginString, strlen(pBeginString)))
			{
				fgets(pBuffer, 150, pFile);
				continue;
			}
		}

		if(strstr(pBuffer, pTargetString))
		{
			fclose(pFile);
			return(pBuffer);
		}		
		fgets(pBuffer, 150, pFile);
	}
	fclose(pFile);
	return(pStrFound);
}

void
StripCRLF(char *pLine)
{
	char *pChar;

	pChar = strchr(pLine, '\r');
	if(pChar)
		*pChar = NULL;

	pChar = strchr(pLine, '\n');
	if(pChar)
		*pChar = NULL;
}

void
AddAutoExecLine(char *pNewLine)
{
	static int	newLines = 0;
	char			pBuf[160];

	StripCRLF(pNewLine);
	sprintf(pBuf, "%-80s\r\n", pNewLine);
	printf("Adding #%d: \"%s\" to PIF file\n", newLines, pNewLine);
	memcpy(pPifBuffer + 0x71E + newLines * 82, pBuf, strlen(pBuf));
	newLines++;
}

void
AddConfigSysLine(char *pNewLine)
{
	static int newLines = 0;
	char			pBuf[160];

	StripCRLF(pNewLine);
	sprintf(pBuf, "%-93s\r\n", pNewLine);
	printf("Adding #%d: \"%s\" to PIF file\n", newLines, pNewLine);
	memcpy(pPifBuffer + 0x438 + newLines * 95, pBuf, strlen(pBuf));
	newLines++;
}*/
